generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int              @id @default(autoincrement())
  email           String?          @unique
  firstName       String
  lastName        String
  userName        String
  contacts        Contact[]
  jobApplications JobApplication[]
  nextSteps       NextStep[]
  companies       Company[]        @relation("CompanyToUser")
  Interview       Interview[]
}

model Contact {
  id                Int             @id @default(autoincrement())
  title             String?
  type              String?
  notes             String?
  userId            Int
  firstName         String
  lastName          String
  closeness         String          @default("D")
  jobApplicationsId Int?
  jobApplications   JobApplication? @relation(fields: [jobApplicationsId], references: [id])
  user              User            @relation(fields: [userId], references: [id])
  nextSteps         NextStep[]
  Interview         Interview[]
}

model Company {
  id              Int              @id @default(autoincrement())
  name            String
  notes           String?
  userid          Int?
  jobApplications JobApplication[]
  users           User[]           @relation("CompanyToUser")
}

model JobApplication {
  id          Int         @id @default(autoincrement())
  type        String?
  role        String?
  notes       String?
  userId      Int
  companyId   Int?
  link        String?
  dateApplied DateTime    @default(now())
  status      String?
  description String?
  nextsteps   String?
  contacts    Contact[]
  company     Company?    @relation(fields: [companyId], references: [id])
  user        User        @relation(fields: [userId], references: [id])
  Interview   Interview[]
}

model NextStep {
  id        Int      @id @default(autoincrement())
  action    String
  notes     String?
  type      String?
  userId    Int?
  contactId Int?
  completed Boolean  @default(false)
  contact   Contact? @relation(fields: [contactId], references: [id])
  user      User?    @relation(fields: [userId], references: [id])
}

model Interview {
  id               Int             @id @default(autoincrement())
  round            Int
  notes            String?
  type             String?
  userId           Int?
  status           String?
  contactId        Int?
  jobApplicationId Int?
  contact          Contact?        @relation(fields: [contactId], references: [id])
  jobApplication   JobApplication? @relation(fields: [jobApplicationId], references: [id])
  user             User?           @relation(fields: [userId], references: [id])
}
